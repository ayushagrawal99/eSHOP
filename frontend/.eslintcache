[{"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\HomeScreen.js":"1","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\productactions.js":"2","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\productReducers.js":"3","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\index.js":"4","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reportWebVitals.js":"5","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Header.js":"6","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Footer.js":"7","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\store.js":"8","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\App.js":"9","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\productConstant.js":"10","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductScreen.js":"11","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Product.js":"12","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\cartReducer.js":"13","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Rating.js":"14","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\cartAction.js":"15","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\cartScreen.js":"16","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Loader.js":"17","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Message.js":"18","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\cartConstant.js":"19","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\userReducer.js":"20","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\userAction.js":"21","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\LoginScreen.js":"22","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\userConstants.js":"23","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\RegisterScreen.js":"24","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProfileScreen.js":"25","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\FormComponent.js":"26","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ShippingScreen.js":"27","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\CheckoutSteps.js":"28","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\PaymentScreen.js":"29","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\orderReducer.js":"31","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\orderActions.js":"32","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\orderConstant.js":"33","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\orderScreen.js":"34","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\UserListScreen.js":"35","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\UserEditScreen.js":"36","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductListScreen.js":"37","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductEditScreen.js":"38","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\OrderListScreen.js":"39","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\SearchBox.js":"40","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\ProductCarousel.js":"41","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Meta.js":"42"},{"size":1874,"mtime":1608283345908,"results":"43","hashOfConfig":"44"},{"size":6774,"mtime":1608279393845,"results":"45","hashOfConfig":"44"},{"size":5130,"mtime":1608278763697,"results":"46","hashOfConfig":"44"},{"size":382,"mtime":1606712864950,"results":"47","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"44"},{"size":4004,"mtime":1608283994414,"results":"49","hashOfConfig":"44"},{"size":425,"mtime":1606559056927,"results":"50","hashOfConfig":"44"},{"size":2800,"mtime":1608280078363,"results":"51","hashOfConfig":"44"},{"size":3157,"mtime":1608212666603,"results":"52","hashOfConfig":"44"},{"size":1548,"mtime":1608278606406,"results":"53","hashOfConfig":"44"},{"size":14130,"mtime":1608295987955,"results":"54","hashOfConfig":"44"},{"size":1089,"mtime":1608289933384,"results":"55","hashOfConfig":"44"},{"size":1525,"mtime":1607485644995,"results":"56","hashOfConfig":"44"},{"size":1508,"mtime":1606618599343,"results":"57","hashOfConfig":"44"},{"size":1390,"mtime":1607742473258,"results":"58","hashOfConfig":"44"},{"size":4335,"mtime":1607323448356,"results":"59","hashOfConfig":"44"},{"size":482,"mtime":1606721901478,"results":"60","hashOfConfig":"44"},{"size":294,"mtime":1606964522890,"results":"61","hashOfConfig":"44"},{"size":246,"mtime":1607485496053,"results":"62","hashOfConfig":"44"},{"size":4923,"mtime":1608284172289,"results":"63","hashOfConfig":"44"},{"size":7183,"mtime":1607854085627,"results":"64","hashOfConfig":"44"},{"size":2854,"mtime":1608295230921,"results":"65","hashOfConfig":"44"},{"size":1532,"mtime":1607849837056,"results":"66","hashOfConfig":"44"},{"size":3921,"mtime":1608295320842,"results":"67","hashOfConfig":"44"},{"size":7179,"mtime":1607841184148,"results":"68","hashOfConfig":"44"},{"size":413,"mtime":1607242058587,"results":"69","hashOfConfig":"44"},{"size":3275,"mtime":1607501919488,"results":"70","hashOfConfig":"44"},{"size":1846,"mtime":1607345203489,"results":"71","hashOfConfig":"44"},{"size":2188,"mtime":1607743157478,"results":"72","hashOfConfig":"44"},{"size":6666,"mtime":1607752534163,"results":"73","hashOfConfig":"44"},{"size":4196,"mtime":1607947027753,"results":"74","hashOfConfig":"44"},{"size":5751,"mtime":1607950833105,"results":"75","hashOfConfig":"44"},{"size":1233,"mtime":1607947243337,"results":"76","hashOfConfig":"44"},{"size":8847,"mtime":1607948215972,"results":"77","hashOfConfig":"44"},{"size":3439,"mtime":1607868363163,"results":"78","hashOfConfig":"44"},{"size":4179,"mtime":1607852797255,"results":"79","hashOfConfig":"44"},{"size":4592,"mtime":1608003045276,"results":"80","hashOfConfig":"44"},{"size":8448,"mtime":1607955694831,"results":"81","hashOfConfig":"44"},{"size":3228,"mtime":1607950351878,"results":"82","hashOfConfig":"44"},{"size":912,"mtime":1608200266138,"results":"83","hashOfConfig":"44"},{"size":1432,"mtime":1608279861906,"results":"84","hashOfConfig":"44"},{"size":548,"mtime":1608281626675,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"y0dsss",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\HomeScreen.js",[],["181","182"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\productactions.js",[],["183","184"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\productReducers.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\index.js",[],["185","186"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reportWebVitals.js",[],["187","188"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Header.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Footer.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\store.js",[],["189","190"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\App.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\productConstant.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Product.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\cartReducer.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Rating.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\cartAction.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\cartScreen.js",["191","192"],"import React, {useEffect} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nimport { Col, Row, Card, Image, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartAction';\r\n\r\nconst CartScreen = (props) => {\r\n    const productID = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if(productID){\r\n            dispatch(addToCart(productID,qty))\r\n        }\r\n    },[ dispatch, productID, qty ])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Card</h1>\r\n                {cartItems.length === 0 ? <p>Your cart is empty <Link to='/'>Go back</Link></p> : (\r\n                    <ListGroup variant='flash'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={item.qty} \r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map( val => (\r\n                                                    <option key={val+1} value={val+1}>{val+1}</option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant='white' \r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            type='button' \r\n                            className='btn-block' \r\n                            disabled={cartItems.length === 0} \r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Loader.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Message.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\cartConstant.js",[],["193","194"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\userReducer.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\userAction.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\LoginScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\userConstants.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\RegisterScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProfileScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\FormComponent.js",["195","196"],"import React from 'react'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\n\r\nconst FormComponent = ( { children } ) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormComponent\r\n","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ShippingScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\CheckoutSteps.js",[],["197","198"],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\PaymentScreen.js",["199"],"import React, { useState } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormComponent'\r\nimport { svaePaymentMethod } from '../actions/cartAction'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart;\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [ paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(svaePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>PAYMENT METHOD</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='PayPal or Credit Card' \r\n                        id='PayPal' \r\n                        name='paymentMethod' \r\n                        value='PayPal' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n                    </Form.Check>\r\n\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='Stripe' \r\n                        name='paymentMethod' \r\n                        value='Stripe' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n                    </Form.Check>\r\n\r\n                </Col>\r\n            </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\reducers\\orderReducer.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\actions\\orderActions.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\constants\\orderConstant.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\orderScreen.js",["200"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails , payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstant'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const [sdkReady , setSdkReady] = useState(false);\r\n    const orderID = match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    if(!loading){\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100 ).toFixed(2)\r\n        }\r\n    \r\n        // Calculate Price\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPaypalScript = async () => {\r\n            const { data : clientID } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if(!order || successPay || successDeliver){\r\n            dispatch({ type : ORDER_PAY_RESET })\r\n            dispatch({ type : ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderID)) \r\n        } else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    },[dispatch, orderID, successPay,order, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderID, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name : </strong> {order.user.name}</p>\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            <p>\r\n                                <strong>\r\n                                    Address : \r\n                                </strong>\r\n                                {order.shippingAddress.address}, \r\n                                {order.shippingAddress.city},\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country},\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>\r\n                                    Method : \r\n                                </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col md={1}>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess = {successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className=' btn btn-block' onClick={deliverHandler}> \r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\UserListScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\UserEditScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductListScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\ProductEditScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\screens\\OrderListScreen.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\SearchBox.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\ProductCarousel.js",[],"E:\\eCommerceWebsiteReact\\root\\frontend\\src\\components\\Meta.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"201","replacedBy":"205"},{"ruleId":"203","replacedBy":"206"},{"ruleId":"201","replacedBy":"207"},{"ruleId":"203","replacedBy":"208"},{"ruleId":"201","replacedBy":"209"},{"ruleId":"203","replacedBy":"210"},{"ruleId":"201","replacedBy":"211"},{"ruleId":"203","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":15},{"ruleId":"213","severity":1,"message":"217","line":5,"column":20,"nodeType":"215","messageId":"216","endLine":5,"endColumn":24},{"ruleId":"201","replacedBy":"218"},{"ruleId":"203","replacedBy":"219"},{"ruleId":"213","severity":1,"message":"220","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"221","line":2,"column":16,"nodeType":"215","messageId":"216","endLine":2,"endColumn":22},{"ruleId":"201","replacedBy":"222"},{"ruleId":"203","replacedBy":"223"},{"ruleId":"213","severity":1,"message":"224","line":2,"column":24,"nodeType":"215","messageId":"216","endLine":2,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":67,"column":7,"nodeType":"227","endLine":67,"endColumn":60,"suggestions":"228"},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],["229"],["230"],["229"],["230"],["229"],["230"],["229"],["230"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.",["229"],["230"],"'Form' is defined but never used.","'Button' is defined but never used.",["229"],["230"],"'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},"Update the dependencies array to be: [dispatch, orderID, successPay, order, successDeliver, userInfo, history]",{"range":"234","text":"235"},[2518,2571],"[dispatch, orderID, successPay, order, successDeliver, userInfo, history]"]